// generated by polka.codes
// This file provides helper functions for platform-specific JIT operations,
// such as determining the target architecture by delegating to a platform-specific strategy.

import Foundation
import TracingUtils
import Utils // For PvmConfig, JITError, Logger

// TODO: Ensure PvmConfig, JITError, Logger are accessible.
// TODO: Ensure JITPlatformStrategy, MacOSJITPlatformStrategy, LinuxJITPlatformStrategy are accessible.

enum JITPlatformHelper {
    private static let logger = Logger(label: "JITPlatformHelper")

    private static func createPlatformStrategy() throws -> JITPlatformStrategy {
        #if os(macOS)
            logger.debug("Creating MacOSJITPlatformStrategy.")
            return MacOSJITPlatformStrategy()
        #elseif os(Linux)
            logger.debug("Creating LinuxJITPlatformStrategy.")
            return LinuxJITPlatformStrategy()
        #else
            let currentOS = ProcessInfo.processInfo.operatingSystemVersionString
            logger.error("JIT running on an unsupported operating system: \(currentOS).")
            throw JITError.targetArchUnsupported(arch: "Unsupported OS: \(currentOS)")
        #endif
    }

    static func getCurrentTargetArchitecture(config: PvmConfig) throws -> String {
        let strategy = try createPlatformStrategy()
        return try strategy.getCurrentTargetArchitecture(config: config)
    }
}
