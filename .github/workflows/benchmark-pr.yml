name: Benchmark PR vs Master

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BENCHMARK_DISABLE_JEMALLOC: true

jobs:
  benchmark-delta:
    name: Benchmark Comparison
    runs-on: [self-hosted, linux]
    timeout-minutes: 60
    continue-on-error: true
    # Only run if CI passed or if manually triggered
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive
        # For workflow_run: checkout the branch CI ran on (PR branch)
        ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_branch || github.ref_name }}

    - run: sudo apt-get update
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: librocksdb-dev libzstd-dev libbz2-dev liblz4-dev

    - uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-2

    - name: Cache SPM
      uses: runs-on/cache@v4
      with:
        path: '**/.build'
        key: ${{ runner.os }}-spm-release-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-release-
      env:
        RUNS_ON_S3_BUCKET_CACHE: laminar-gh-action-cache

    - name: Cache Cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache bandersnatch_vrfs static lib
      uses: actions/cache@v4
      with:
        path: .lib/libbandersnatch_vrfs.a
        key: ${{ runner.os }}-libs-libbandersnatch-${{ hashFiles('Utils/Sources/bandersnatch/**') }}
        restore-keys: |
            ${{ runner.os }}-libs-libbandersnatch

    - name: Cache bls static lib
      uses: actions/cache@v4
      with:
        path: .lib/libbls.a
        key: ${{ runner.os }}-libs-libbls-${{ hashFiles('Utils/Sources/bls/**') }}
        restore-keys: |
            ${{ runner.os }}-libs-libbls

    - name: Cache erasure-coding static lib
      uses: actions/cache@v4
      with:
        path: .lib/libec.a
        key: ${{ runner.os }}-libs-libec-${{ hashFiles('Utils/Sources/erasure-coding/**') }}
        restore-keys: |
            ${{ runner.os }}-libs-libec

    - name: Setup Swift
      uses: SwiftyLab/setup-swift@latest

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt

    - name: Build dependencies
      run: make deps

    - name: Check if benchmarks exist
      id: check_benchmarks
      run: |
        if [ -d "JAMTests/Benchmarks" ]; then
          echo "hasBenchmarks=true" >> $GITHUB_OUTPUT
        else
          echo "hasBenchmarks=false" >> $GITHUB_OUTPUT
        fi

    - name: Run benchmarks for PR branch
      if: steps.check_benchmarks.outputs.hasBenchmarks == 'true'
      run: |
        cd JAMTests
        swift package --allow-writing-to-directory .benchmarkBaselines/ benchmark baseline update pull_request --no-progress --quiet

    - name: Switch to master branch
      if: steps.check_benchmarks.outputs.hasBenchmarks == 'true'
      run: |
        git stash push -m "benchmark-pr-changes" --include-untracked 2>/dev/null || true
        git checkout master

    - name: Run benchmarks for master branch
      if: steps.check_benchmarks.outputs.hasBenchmarks == 'true'
      run: |
        cd JAMTests
        swift package --allow-writing-to-directory .benchmarkBaselines/ benchmark baseline update master --no-progress --quiet

    - name: Switch back to PR branch
      if: steps.check_benchmarks.outputs.hasBenchmarks == 'true'
      run: |
        git checkout ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_branch || github.ref_name }}
        git stash pop 2>/dev/null || true

    - name: Compare benchmarks with master
      if: steps.check_benchmarks.outputs.hasBenchmarks == 'true'
      id: benchmark_comparison
      run: |
        cd JAMTests
        echo "## Benchmark Comparison" >> $GITHUB_STEP_SUMMARY
        echo "Comparing pull_request with master" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        # Check if master baseline exists
        if [ -f ".benchmarkBaselines/master.json" ]; then
          # Capture the comparison output
          if swift package benchmark baseline check master pull_request --format markdown > comparison.md 2>&1; then
            echo "status=success" >> $GITHUB_OUTPUT
            cat comparison.md >> $GITHUB_STEP_SUMMARY
            # Save for PR comment (escape for GitHub Actions)
            {
              echo 'markdown<<EOF'
              cat comparison.md
              echo EOF
            } >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            cat comparison.md >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Benchmark comparison failed" >> $GITHUB_STEP_SUMMARY
            # Save for PR comment even on failure
            {
              echo 'markdown<<EOF'
              cat comparison.md 2>/dev/null || echo "Benchmark comparison failed - check workflow logs for details"
              echo EOF
            } >> $GITHUB_OUTPUT
          fi
        else
          echo "Master baseline not found - this might be the first benchmark run" >> $GITHUB_STEP_SUMMARY
          echo "status=no-baseline" >> $GITHUB_OUTPUT
          {
            echo 'markdown<<EOF'
            echo "⚠️ Master baseline not found. This appears to be the first benchmark run for this repository."
            echo "Future PRs will show performance comparisons against this baseline."
            echo EOF
          } >> $GITHUB_OUTPUT
        fi
      continue-on-error: true

    - name: Comment on PR with results
      if: steps.check_benchmarks.outputs.hasBenchmarks == 'true' && github.event_name == 'workflow_run'
      uses: thollander/actions-comment-pull-request@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        message: |
          📊 **Benchmark Results**

          [View detailed results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

          **Comparison: `pull_request` vs `master`**

          ${{ steps.benchmark_comparison.outputs.markdown }}
        comment_includes: "Benchmark Results"

    - name: Upload benchmark results
      if: steps.check_benchmarks.outputs.hasBenchmarks == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results-${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_branch || github.ref_name }}
        path: |
          JAMTests/.benchmarkBaselines/
          JAMTests/BenchmarkResults/
        retention-days: 30
